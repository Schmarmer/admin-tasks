<Application x:Class="Admin_Tasks.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Admin_Tasks"
             xmlns:converters="clr-namespace:Admin_Tasks.Converters">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Default to Light Theme -->
                <ResourceDictionary Source="Themes/LightTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <!-- Converters -->
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <converters:TaskToFoldersConverter x:Key="TaskToFoldersConverter" />
            <converters:TaskHasFoldersConverter x:Key="TaskHasFoldersConverter" />
            <converters:TaskFolderCountConverter x:Key="TaskFolderCountConverter" />
            <converters:TaskFolderColorsConverter x:Key="TaskFolderColorsConverter" />
            <converters:TaskFolderNamesConverter x:Key="TaskFolderNamesConverter" />
            <converters:TaskFolderVisibilityConverter x:Key="TaskFolderVisibilityConverter" />
            <converters:TaskAccentBrushConverter x:Key="TaskAccentBrushConverter" />
            <converters:TaskBackgroundBrushConverter x:Key="TaskBackgroundBrushConverter" />
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <converters:TaskUserPairConverter x:Key="TaskUserPairConverter" />
            <converters:TaskAcceptVisibilityConverter x:Key="TaskAcceptVisibilityConverter" />
            <converters:TaskForwardVisibilityConverter x:Key="TaskForwardVisibilityConverter" />
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
            <converters:NullToBooleanConverter x:Key="NullToBooleanConverter" />
            <converters:BooleanToStringConverter x:Key="BooleanToStringConverter" />
            <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter" />
            <converters:FirstLetterConverter x:Key="FirstLetterConverter" />
            <converters:RelativeTimeConverter x:Key="RelativeTimeConverter" />
            <converters:IntToBoolConverter x:Key="IntToBoolConverter" />
            
            <!-- Global Text Rendering Styles -->
            <Style TargetType="TextBlock">
                <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            
            <Style TargetType="Label">
                <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            
            <Style TargetType="Button">
                <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
                <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            
            <!-- Common Styles -->
            <Style x:Key="ModernButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="16,10"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    CornerRadius="6" 
                                    Padding="{TemplateBinding Padding}">
                                <Border.Effect>
                                    <DropShadowEffect Color="{DynamicResource ShadowColor}" 
                                                    BlurRadius="4" 
                                                    ShadowDepth="2" 
                                                    Opacity="1"/>
                                </Border.Effect>
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentHoverBrush}"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="1.02" ScaleY="1.02"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Success Button Style -->
            <Style x:Key="SuccessButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
                <Setter Property="Background" Value="{DynamicResource SuccessBrush}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#0F5132"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- Danger Button Style -->
            <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
                <Setter Property="Background" Value="{DynamicResource DangerBrush}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#A02834"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- Secondary Button Style -->
            <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
                <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- Menu Button Style -->
            <Style x:Key="MenuButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    CornerRadius="4" 
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="ModernTextBoxStyle" TargetType="TextBox">
                <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="4">
                                <ScrollViewer x:Name="PART_ContentHost" 
                                            Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="ModernPasswordBoxStyle" TargetType="PasswordBox">
                <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="PasswordBox">
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="4">
                                <ScrollViewer x:Name="PART_ContentHost" 
                                            Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Color Radio Button Style for Custom Folder Dialog -->
            <Style x:Key="ColorRadioButtonStyle" TargetType="RadioButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border x:Name="ColorBorder" 
                                    Width="30" 
                                    Height="30" 
                                    CornerRadius="15" 
                                    Background="{TemplateBinding Tag}" 
                                    BorderThickness="3" 
                                    BorderBrush="Transparent" 
                                    Margin="5">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" 
                                                    Opacity="0.2" 
                                                    ShadowDepth="2" 
                                                    BlurRadius="4"/>
                                </Border.Effect>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="ColorBorder" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                    <Setter TargetName="ColorBorder" Property="BorderThickness" Value="4"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ColorBorder" Property="BorderBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                                    <Setter TargetName="ColorBorder" Property="BorderThickness" Value="2"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
